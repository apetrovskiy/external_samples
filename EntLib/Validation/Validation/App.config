<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="validation" type="Microsoft.Practices.EnterpriseLibrary.Validation.Configuration.ValidationSettings, Microsoft.Practices.EnterpriseLibrary.Validation" requirePermission="true"/>
  </configSections>
  <validation>
    <type name="ValidationExample.Product" defaultRuleset="MyRuleset" assemblyName="ValidationExample, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
      <ruleset name="MyRuleset">
        <properties>
          <property name="DateDue">
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.OrCompositeValidator, Microsoft.Practices.EnterpriseLibrary.Validation" messageTemplate="[{0}]{2} must be between today and six months time." messageTemplateResourceName="" messageTemplateResourceType="" tag="Date Due" name="Or Composite Validator">
              <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.NotNullValidator, Microsoft.Practices.EnterpriseLibrary.Validation" negated="true" messageTemplate="[{0}]Value can be NULL or a date." messageTemplateResourceName="" messageTemplateResourceType="" tag="" name="Not Null Validator"/>
              <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RelativeDateTimeValidator, Microsoft.Practices.EnterpriseLibrary.Validation" lowerUnit="Day" upperUnit="Month" lowerBound="0" lowerBoundType="Inclusive" upperBound="6" upperBoundType="Inclusive" negated="false" messageTemplate="[{0}]Value can be NULL or a date." messageTemplateResourceName="" messageTemplateResourceType="" tag="" name="Relative Date Time Validator"/>
            </validator>
          </property>
          <property name="Description">
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.OrCompositeValidator, Microsoft.Practices.EnterpriseLibrary.Validation" messageTemplate="[{0}]Description can be NULL or a string value." messageTemplateResourceName="" messageTemplateResourceType="" tag="" name="Or Composite Validator">
              <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation" upperBound="100" lowerBound="5" lowerBoundType="Inclusive" upperBoundType="Inclusive" negated="false" messageTemplate="[{0}]{1} must be between {3} and {5} characters." messageTemplateResourceName="" messageTemplateResourceType="" tag="" name="String Length Validator"/>
              <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.NotNullValidator, Microsoft.Practices.EnterpriseLibrary.Validation" negated="true" messageTemplate="[{0}]Value can be NULL." messageTemplateResourceName="" messageTemplateResourceType="" tag="" name="Not Null Validator"/>
            </validator>
          </property>
          <property name="ID">
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.NotNullValidator, Microsoft.Practices.EnterpriseLibrary.Validation" negated="false" messageTemplate="[{0}]You did not specify a value for the {2}." messageTemplateResourceName="" messageTemplateResourceType="" tag="Product ID" name="Not Null Validator"/>
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation" upperBound="6" lowerBound="6" lowerBoundType="Inclusive" upperBoundType="Inclusive" negated="false" messageTemplate="[{0}]{1} must be {3} characters." messageTemplateResourceName="" messageTemplateResourceType="" tag="" name="String Length Validator"/>
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RegexValidator, Microsoft.Practices.EnterpriseLibrary.Validation" pattern="[A-Z]{2}[0-9]{4}" options="None" patternResourceName="" patternResourceType="" messageTemplate="[{0}]{2} must be two capital letters followed by four numbers." messageTemplateResourceName="" messageTemplateResourceType="" tag="Product ID" name="Regex Validator"/>
          </property>
          <property name="InStock">
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RangeValidator, Microsoft.Practices.EnterpriseLibrary.Validation" lowerBound="0" lowerBoundType="Inclusive" upperBound="0" upperBoundType="Ignore" negated="false" messageTemplate="[{0}]Quantity {2} cannot be less than {3}." messageTemplateResourceName="" messageTemplateResourceType="" tag="In Stock" name="Range Validator"/>
          </property>
          <property name="Name">
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.StringLengthValidator, Microsoft.Practices.EnterpriseLibrary.Validation" upperBound="50" lowerBound="3" lowerBoundType="Inclusive" upperBoundType="Inclusive" negated="false" messageTemplate="[{0}]{1} must be between {3} and {5} characters." messageTemplateResourceName="" messageTemplateResourceType="" tag="" name="String Length Validator"/>
          </property>
          <property name="OnOrder">
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.RangeValidator, Microsoft.Practices.EnterpriseLibrary.Validation" lowerBound="0" lowerBoundType="Inclusive" upperBound="0" upperBoundType="Ignore" negated="false" messageTemplate="[{0}]Quantity {2} cannot be less than {3}." messageTemplateResourceName="" messageTemplateResourceType="" tag="On Order" name="Range Validator"/>
          </property>
          <property name="ProductType">
            <validator type="Microsoft.Practices.EnterpriseLibrary.Validation.Validators.EnumConversionValidator, Microsoft.Practices.EnterpriseLibrary.Validation" enumType="ValidationExample.ProductType, ValidationExample, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" negated="false" messageTemplate="[{0}]{2} must be a value from the '{3}' enumeration." messageTemplateResourceName="" messageTemplateResourceType="" tag="Product Type" name="Enum Conversion Validator"/>
          </property>
        </properties>
      </ruleset>
    </type>
  </validation>
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IProductService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false"/>
          <security mode="Message">
            <transport clientCredentialType="Windows" proxyCredentialType="None" realm=""/>
            <message clientCredentialType="Windows" negotiateServiceCredential="true" algorithmSuite="Default" establishSecurityContext="true"/>
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost:10867/ProductService.svc" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_IProductService" contract="ProductService.IProductService" name="WSHttpBinding_IProductService">
        <identity>
          <dns value="localhost"/>
        </identity>
      </endpoint>
    </client>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ValidationExample.ExampleServiceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="ValidationExample.ExampleServiceBehavior" name="ValidationExample.ExampleService">
        <endpoint address="" binding="wsHttpBinding" contract="ValidationExample.IExampleService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8731/Design_Time_Addresses/ValidationExample/ExampleService/"/>
          </baseAddresses>
        </host>
      </service>
    </services>
  </system.serviceModel>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/></startup></configuration>
