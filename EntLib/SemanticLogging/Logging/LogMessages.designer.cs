#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SemanticLoggingExample
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SemanticLogging")]
	public partial class LogMessagesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTrace(Trace instance);
    partial void UpdateTrace(Trace instance);
    partial void DeleteTrace(Trace instance);
    #endregion
		
		public LogMessagesDataContext() : 
				base(global::SemanticLoggingExample.Properties.Settings.Default.SemanticLoggingConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LogMessagesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogMessagesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogMessagesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LogMessagesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Trace> Traces
		{
			get
			{
				return this.GetTable<Trace>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Traces")]
	public partial class Trace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _InstanceName;
		
		private System.Guid _ProviderId;
		
		private string _ProviderName;
		
		private int _EventId;
		
		private long _EventKeywords;
		
		private string _Level;
		
		private int _Opcode;
		
		private int _Task;
		
		private System.DateTimeOffset _Timestamp;
		
		private int _Version;
		
		private string _FormattedMessage;
		
		private string _Payload;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnInstanceNameChanging(string value);
    partial void OnInstanceNameChanged();
    partial void OnProviderIdChanging(System.Guid value);
    partial void OnProviderIdChanged();
    partial void OnProviderNameChanging(string value);
    partial void OnProviderNameChanged();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnEventKeywordsChanging(long value);
    partial void OnEventKeywordsChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnOpcodeChanging(int value);
    partial void OnOpcodeChanged();
    partial void OnTaskChanging(int value);
    partial void OnTaskChanged();
    partial void OnTimestampChanging(System.DateTimeOffset value);
    partial void OnTimestampChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnFormattedMessageChanging(string value);
    partial void OnFormattedMessageChanged();
    partial void OnPayloadChanging(string value);
    partial void OnPayloadChanged();
    #endregion
		
		public Trace()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string InstanceName
		{
			get
			{
				return this._InstanceName;
			}
			set
			{
				if ((this._InstanceName != value))
				{
					this.OnInstanceNameChanging(value);
					this.SendPropertyChanging();
					this._InstanceName = value;
					this.SendPropertyChanged("InstanceName");
					this.OnInstanceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ProviderName
		{
			get
			{
				return this._ProviderName;
			}
			set
			{
				if ((this._ProviderName != value))
				{
					this.OnProviderNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderName = value;
					this.SendPropertyChanged("ProviderName");
					this.OnProviderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int NOT NULL")]
		public int EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventKeywords", DbType="BigInt NOT NULL")]
		public long EventKeywords
		{
			get
			{
				return this._EventKeywords;
			}
			set
			{
				if ((this._EventKeywords != value))
				{
					this.OnEventKeywordsChanging(value);
					this.SendPropertyChanging();
					this._EventKeywords = value;
					this.SendPropertyChanged("EventKeywords");
					this.OnEventKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opcode", DbType="Int NOT NULL")]
		public int Opcode
		{
			get
			{
				return this._Opcode;
			}
			set
			{
				if ((this._Opcode != value))
				{
					this.OnOpcodeChanging(value);
					this.SendPropertyChanging();
					this._Opcode = value;
					this.SendPropertyChanged("Opcode");
					this.OnOpcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Task", DbType="Int NOT NULL")]
		public int Task
		{
			get
			{
				return this._Task;
			}
			set
			{
				if ((this._Task != value))
				{
					this.OnTaskChanging(value);
					this.SendPropertyChanging();
					this._Task = value;
					this.SendPropertyChanged("Task");
					this.OnTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormattedMessage", DbType="NVarChar(MAX)")]
		public string FormattedMessage
		{
			get
			{
				return this._FormattedMessage;
			}
			set
			{
				if ((this._FormattedMessage != value))
				{
					this.OnFormattedMessageChanging(value);
					this.SendPropertyChanging();
					this._FormattedMessage = value;
					this.SendPropertyChanged("FormattedMessage");
					this.OnFormattedMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payload", DbType="NVarChar(MAX)")]
		public string Payload
		{
			get
			{
				return this._Payload;
			}
			set
			{
				if ((this._Payload != value))
				{
					this.OnPayloadChanging(value);
					this.SendPropertyChanging();
					this._Payload = value;
					this.SendPropertyChanged("Payload");
					this.OnPayloadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
