<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="collection_not_empty" xml:space="preserve">
    <value>Samlingen får inte vara tom</value>
    <comment>Collection must not be empty</comment>
  </data>
  <data name="date_invalid" xml:space="preserve">
    <value>Vänligen skriv ett giltigt datumvärd i det här fältet.</value>
    <comment>Please enter a valid date</comment>
  </data>
  <data name="decimal_invalid" xml:space="preserve">
    <value>Vänligen skriv ett giltigt nummer i det här fältet.</value>
    <comment>Please enter a valid decimal in this field</comment>
  </data>
  <data name="double_invalid" xml:space="preserve">
    <value>Vänligen skriv ett giltigt nummer i det här fältet.</value>
    <comment>Please enter a valid double in this field</comment>
  </data>
  <data name="email" xml:space="preserve">
    <value>Vänligen skriv en giltig e-mail adress i det här fältet. Tex: info@domän.se</value>
    <comment>Please enter a valid email address. For example fred@domain.com</comment>
  </data>
  <data name="exactlength" xml:space="preserve">
    <value>Fältet måste vara {0} tecken långt.</value>
    <comment>Field must be {0} characters long</comment>
  </data>
  <data name="generic_invalid" xml:space="preserve">
    <value>Fältet har felaktigt innehåll.</value>
    <comment>Field has an invalid content</comment>
  </data>
  <data name="group_not_empty_seperator" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="integer_invalid" xml:space="preserve">
    <value>Vänligen skriv ett heltal i det här fältet.</value>
    <comment>Please enter a valid integer in this field</comment>
  </data>
  <data name="isrequired" xml:space="preserve">
    <value>Det här fältet är obligatoriskt.</value>
    <comment>This is a required field</comment>
  </data>
  <data name="length_invalidrange" xml:space="preserve">
    <value>Fältet måste vara mellan {0} och {1} tecken långt.</value>
    <comment>Field must be between {0} and {1} characters long</comment>
  </data>
  <data name="length_toolong" xml:space="preserve">
    <value>Fältet måste vara mindre än {0} tecken.</value>
    <comment>Field must be less than {0} characters long</comment>
  </data>
  <data name="length_tooshort" xml:space="preserve">
    <value>Fältet måste vara minst {0} tecken långt.</value>
    <comment>Field must be at least {0} characters long</comment>
  </data>
  <data name="range_invalid" xml:space="preserve">
    <value>Fältet måste vara mellan {0} och {1}.</value>
    <comment>Field must be between {0} and {1}</comment>
  </data>
  <data name="not_same_as_invalid" xml:space="preserve">
    <value>Fälten får inte vara lika.</value>
    <comment>Fields should not match</comment>
  </data>
  <data name="range_toohigh" xml:space="preserve">
    <value>Fältet måste vara mindre än eller lika med {0}.</value>
    <comment>Field must be less than or equal to {0}</comment>
  </data>
  <data name="range_toohighorlow" xml:space="preserve">
    <value>Fältet måste vara mellan {0} och {1}.</value>
    <comment>Field must be between {0} and {1}</comment>
  </data>
  <data name="range_toolow" xml:space="preserve">
    <value>Fältet får inte vara större än eller lika med {0}.</value>
    <comment>Field must be greater than or equal to {0}</comment>
  </data>
  <data name="same_as_invalid" xml:space="preserve">
    <value>Fälten är inte lika.</value>
    <comment>Fields do not match</comment>
  </data>
  <data name="set_invalid" xml:space="preserve">
    <value>Fältet måste vara en del av ett givet set.</value>
    <comment>Field must be within a given set of values.</comment>
  </data>
  <data name="single_invalid" xml:space="preserve">
    <value>Fältvärdet är felaktigt (inte ett giltigt nummer [single])</value>
    <comment>Field value is invalid (not a valid single)</comment>
  </data>
  <data name="time_invalid" xml:space="preserve">
    <value>Fältvärdet är inte en giltig tid.</value>
    <comment>Field value is invalid (not a valid time)</comment>
  </data>
  <data name="credit_card_invalid" xml:space="preserve">
    <value>Fältvärdet är antingen inte ett giltigt kreditkortsnummer, eller så stöds inte formatet av applikationen.</value>
    <comment>Field value does not appear to be a valid credit card number, or is of an unsupported type.</comment>
  </data>
  <data name="not_same_value_invalid" xml:space="preserve">
    <value>Fältet får intet vara '{0}'.</value>
    <comment>Field must not equals '{0}'</comment>
  </data>
  <data name="group_not_empty_invalid" xml:space="preserve">
    <value>Minst ett av värdena i ({0}) måste ha ett värde.</value>
    <comment>At least one of the values in ({0}) should not be empty</comment>
  </data>
</root>