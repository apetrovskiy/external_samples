Developing the plugin
=====================

Daily development:

1. Don't install xunitcontrib into ProgramFiles\JetBrains\ReSharper\...\plugins\...
2. Configure Visual Studio so that ReSharper loads a production/stable copy of the plugin from a separate folder
   (This gives xunit support while developing and debugging the plugin)
   a) Create a separate folder somewhere containing the production (or latest working development) version of the dlls
   b) Create a new Visual Studio shortcut:
      i. Set the "Start In" field to this directory
      ii. Add "/ReSharper.Plugin xunitcontrib.runner.resharper.provider.5.1.dll" to the command line
         (or whatever the appropriate version is)

To Debug:

If debugging against Visual Studio 2010, note that you won't be able to press F5 to start debugging without using
the "netfx4project.to.allow.debugging.vs2010" project trick detailed above for rs60.

For VS2008:
1. Set xunitcontrib.runner.resharper.provider.5.x as your "StartUp Project"

For VS2010:
1. Set "netfx4project.to.allow.debugging.vs2010" project as the "StartUp Project" (VS2010 is .net 4. xunitcontrib
   is .net 3.5 - to support VS2008. Starting debugging from a .net 3.5 project won't be able to debug the .net 4
   process)

For both:
2. In the Properties -> Debug page for the appropriate startup project, set the start program as Visual Studio
   (e.g. C:\Program Files\Microsoft Visual Studio 10.0\Common7\IDE\devenv.exe - or appropriate version)
3. Set the arguments to "..\..\..\tests.vs2010.sln /ReSharper.Plugin xunitcontrib.runner.resharper.provider.6.0.dll"
   (without the quotes, and swap for the appropriate version of the plugin)
4. Leave working directory blank, it will default to the bin\Debug directory (if debugging for vs2010, point to
   the debug directory of the xunitcontrib.runner.resharper.provider project)


Debugging:

Tests are run in an external process. When in debug mode, the plugin will set a flag that causes this process to
show a message box saying "Waiting for debugger". At this point, you can attach and set breakpoints in the runner
assembly.
